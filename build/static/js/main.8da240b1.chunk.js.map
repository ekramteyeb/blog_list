{"version":3,"sources":["components/Blog.js","services/blogs.js","components/Notification.js","components/LoginForm.js","components/SignUpForm.js","services/login.js","services/signup.js","components/Togglable.js","components/BlogForm.js","App.js","index.js"],"names":["Blog","blog","handleLikes","handleDeleteBlog","isItLiked","displayDeleteBtn","useState","display","setDisplay","className","style","padding","border","borderWidth","marginBottom","marginTop","borderRadius","title","author","onClick","href","url","likes","length","fontSize","id","backgroundColor","margin","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","request","post","update","put","remove","delete","setToken","newToken","notifySuccess","color","borderStyle","Notification","message","notifyColor","deletErrorMessage","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","SignUpForm","handleNameChange","name","login","credentials","signup","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","buttonExit","displayName","BlogForm","createBlog","setTitle","setAuthor","setUrl","event","preventDefault","target","App","blogs","setBlogs","showError","setShowError","errorMessage","setErrorMessage","setUsername","setName","setPassword","user","setUser","setStyle","userBlogs","setUserBlogs","useEffect","blogService","loginService","users","filter","useri","map","u","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogFormRef","useRef","addBlog","blogObject","current","createdBlog","concat","setTimeout","handleLogin","setItem","stringify","handleSignUp","signUpService","removeItem","sort","b","key","find","n","changedblog","includes","modifiedblog","catch","error","console","log","blogToDelete","confirm","body","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8da240b1.chunk.js","sourcesContent":["/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react'\r\n//import Togglable from './Togglable'\r\n\r\nconst Blog = ({ blog,handleLikes, handleDeleteBlog ,isItLiked,displayDeleteBtn }) => {\r\n\r\n  const [display, setDisplay] = useState(false)\r\n  //const [liked, setLiked] = useState('false')\r\n\r\n  const blogStyle = {\r\n    padding:10,\r\n    border:'solid green 1px',\r\n    borderWidth: 4,\r\n    marginBottom: 5,\r\n    marginTop:5,\r\n    borderRadius:'0.5em'\r\n  }\r\n\r\n  return (\r\n    <div className=\"blog\" style={blogStyle}>\r\n\r\n      {blog.title} by {blog.author} <button className='display' onClick={() => setDisplay(!display)}>{display ? 'hide' : 'view'}</button>\r\n      <br/>\r\n      <div className='togglableDiv' style={{ display: display ? 'block': 'none' }}>\r\n        <a href={blog.url}>{blog.url}</a> <br/>\r\n        <span className='likesCount' >{blog.likes.length === null ? 0 : blog.likes.length} </span><button className='likes' onClick={handleLikes}\r\n          style={{ fontSize:10, borderRadius:'1em' }}>{isItLiked}</button>\r\n        <br/>\r\n\r\n        <button id='deleteButton' onClick={handleDeleteBlog}\r\n          style={{ fontSize:10,backgroundColor:'#6595ED', margin:5,display:`${displayDeleteBtn}` }}>\r\n       remove\r\n        </button>\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","\nimport axios from 'axios'\nconst baseUrl = '/api/blogs'\n\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\nconst create = async newObject => {\n  const config = {\n    headers:{ Authorization:token }\n  }\n  const request =  axios.post(baseUrl,newObject,config)\n  return request.then(response => response.data)\n\n}\n\nconst update = async (id,newObject) => {\n  /* const config = {\n        headers:{Authorization:token}\n    } */\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n\n}\nconst remove = async id => {\n  const config = {\n    headers:{ Authorization:token }\n  }\n  const response =  await axios.delete(`${baseUrl}/${id}`,config)\n  return response.data\n}\n\n\nexport default { getAll,create,update,remove,setToken }","import React from 'react'\n\nconst notifySuccess = {\n\n  color: 'green',\n  backgroundColor: 'lightgray',\n  fontSize: 20,\n  borderStyle: 'solid',\n  borderRadius: 5,\n  padding: 10,\n  marginBottom: 10\n\n}\n\n// eslint-disable-next-line no-unused-vars\nconst Notification = ({ message, deletErrorMessage,notifyColor }) => {\n\n  if(message === null){\n    return null\n  }\n  return(\n    <div className='error' style={notifyColor ? notifySuccess : { ...notifySuccess,color:'red' }}>\n      {message}\n    </div>\n  )\n}\n\n\nexport default Notification","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div style={{ display:'inline-block' }}>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username :\n          <input id='username'\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <br/>\n        <div>\n          password :\n          <input id='password'\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <br/>\n        <button  id='login-button' type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\nexport default LoginForm","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst SignUpForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  handleNameChange,\n  username,\n  name,\n  password\n}) => {\n  return (\n    <div style={{ display:'inline-block' }}>\n      <h2>Sign Up</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username :\n          <input id='usernamesup'\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <br/>\n        <div>\n          name :\n          <input id='name'\n            value={name}\n            onChange={handleNameChange}\n          />\n        </div>\n        <br/>\n        <div>\n          password :\n          <input id='passwordsup'\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <br/>\n        <button  id='signup-button' type=\"submit\">signup</button>\n      </form>\n    </div>\n  )\n}\n\nSignUpForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\nexport default SignUpForm","\nimport axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default { login , getAll }","\nimport axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst signup = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n/* const getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n} */\n\nexport default { signup }","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props,ref) => {\n  const [visible, setVisible] = useState(true)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div style={{ display:'inline-block' }}>\n      <div style={showWhenVisible}>\n        <button  onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={hideWhenVisible}>\n        {props.children}\n        <button  onClick={toggleVisibility}>{props.buttonExit}</button>\n      </div>\n    </div>\n  )\n})\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\nTogglable.displayName = 'Togglable'\nexport default Togglable","import React,{ useState } from 'react'\n\nconst BlogForm = ({ createBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n\n\n  const addBlog = (event) => {\n    event.preventDefault() //prevents form submiting usual action like page load\n    const blogObject = {\n      title: title,\n      author: author,\n      url: url,\n    }\n\n    createBlog(blogObject)\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n\n  }\n  return (\n    <div style={{ display:'inline-block' }}>\n\n      <form onSubmit={addBlog}>\n        <h3>Create new </h3>\n\n      Title : <input id='title' value={title} onChange={ event => { setTitle(event.target.value)}} /><br/>\n      Author : <input id='author' value={author} onChange={ event => { setAuthor(event.target.value)}} /><br/>\n      Url : <input id='url' value={url} onChange={ event => { setUrl(event.target.value)}} /><br/><br/>\n        <button  id='create-blog' type=\"submit\">create</button>\n\n      </form>\n    </div>\n\n  )\n}\nexport default BlogForm\n\n\n","import React, { useState, useEffect,useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport SignUpForm from './components/SignUpForm'\n//import Footer from './components/Footer'\nimport loginService from './services/login'\nimport signUpService from './services/signup'\nimport Togglable from './components/Togglable'\nimport BlogForm from './components/BlogForm'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  //const [showAll, setShowAll] = useState(false)\n  const [showError, setShowError] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username,setUsername] = useState('')\n  const [name,setName] = useState('')\n  //const [usernamesup,setUsernamesup] = useState('')\n  const [password,setPassword] = useState('')\n  //const [passwordsup,setPasswordsup] = useState('')\n  const [user,setUser] = useState(null)\n  const [style, setStyle] = useState('')\n  const [userBlogs, setUserBlogs] = useState([])\n\n  useEffect(() => {\n    if(user !== null){\n      blogService.getAll().then(blogs => {\n        setBlogs( blogs )\n      })\n    }\n  }, [user])\n\n  useEffect(() => {\n    if(user !== null){\n      loginService.getAll().then(users => {\n        setUserBlogs( users.filter(useri => useri.username === user.username).map(u => u.blogs))\n      })\n    }\n  }, [blogs,user])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const blogFormRef = useRef()\n\n\n  const addBlog = (blogObject) => {\n\n    if(!blogObject.title || !blogObject.url || !blogObject.author){\n      setStyle(false)\n      setErrorMessage('All fields should be filled')\n      deletErrorMessage()\n      return\n    }\n    //closes the blog form after a blog created\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(createdBlog => {\n        setBlogs(blogs.concat(createdBlog))\n        setShowError('')\n        setStyle(true)\n        setErrorMessage(`${blogObject.title} is added successfully`)\n        deletErrorMessage()\n      })\n\n  }\n\n  const deletErrorMessage = () => {\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 3000)\n  }\n  /* const userBlogss = loginService.getAll()\n        .then(blogs => console.log('user blogs',blogs)) */\n  //let blogUseri = ''\n  const handleLikes = (id) => {\n\n    const blog = blogs.find(n => n.id === id) //find the object we want to modify\n    //const likes = blog.likes.map(n => n.username)\n    // if(blog.user.username !== undefined ){blogUseri = blog.user.username}\n    //console.log(blogUseri)\n    //console.log('blog initially',blog.user.id || blog.user)\n\n    //console.log('user blogs', userBlogs)\n    let isLiked = blog.likes.includes(user.username)\n    let changedblog = '' //isLiked ? { ...blog, likes: blog.likes.concat(user) } : { ...blog, likes: blog.likes.splice(blog.likes.indexOf(user),1)}\n    if(isLiked){\n      changedblog = { ...blog, likes: blog.likes.filter(n => n !== user.username), user:blog.user }\n    }else{\n      changedblog = { ...blog, likes: blog.likes.concat(user.username),user:blog.user }\n    }\n    //likes of the object changed\n    //console.log(changedblog)\n    blogService\n      .update(id, changedblog)\n      .then( modifiedblog => {\n        setBlogs(blogs.map(\n          blog => blog.id !== id ? blog : modifiedblog\n        ))\n\n      })\n      .catch(error => {\n        setErrorMessage(`The ${blog.title} is aleady coming from here deleted.`)\n        console.log(error.message)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setBlogs(blogs.filter(n => n.id !== id))\n      })\n  }\n\n  const handleDeleteBlog = (id) => {\n    const blogToDelete = blogs.find(n => n.id === id)\n\n    const confirm = window.confirm(`Remove blog ? ${blogToDelete.title} by ${blogToDelete.author}`)\n\n    if(confirm){\n\n      blogService\n        .remove(id)\n        .then( () => {\n          setBlogs(blogs.filter(\n            blog => blog.id !== id ? blog : ''\n          ))\n          setErrorMessage('Blog deleted successfully')\n          setStyle(true)\n          setTimeout(() => {\n            setErrorMessage(null)\n\n          }, 3000)\n        })\n        .catch(error => {\n          console.log(error.body)\n          if(error.message.includes(401)){\n            setErrorMessage('Unauthorized to delete.')\n          }else{\n            setErrorMessage(`The blog is aleady deleted. or ${error.message}` )\n          }\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000)\n          setBlogs(blogs.filter(n => n.id !== id))\n        })\n\n\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      //to log out from local storage type in browser\n      //window.localStorage.removeItem('loggedblogappUser')\n      //window.localStorage.clear()\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong username or password')\n      setStyle(false)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n  const handleSignUp = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await signUpService.signup({\n        username,name, password,\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      //to log out from local storage type in browser\n      //window.localStorage.removeItem('loggedblogappUser')\n      //window.localStorage.clear()\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setName('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Password should be atleast 3 character long')\n      setStyle(false)\n      setUser(user)\n      setUsername('')\n      setName('')\n      setPassword('')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n  const loginForm = () => {\n    return (\n      <Togglable buttonLabel='login' buttonExit='cancel'>\n        <LoginForm\n          username={username}\n          password={password}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          handleSubmit={handleLogin}\n        />\n      </Togglable>\n    )\n  }\n  const signUpForm = () => {\n    return (\n      <Togglable buttonLabel='signup' buttonExit='cancel'>\n        <SignUpForm\n          username={username}\n          name={name}\n          password={password}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handleNameChange={({ target }) => setName(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          handleSubmit={handleSignUp}\n        />\n      </Togglable>\n    )\n  }\n  const blogForm = () => {\n\n\n    /* <form onSubmit={addBlog}>\n      <h3>Create new </h3>\n\n      Title : <input value={title} onChange={ event => { setTitle(event.target.value)}} /><br/>\n      Author : <input value={author} onChange={ event => { setAuthor(event.target.value)}} /><br/>\n      Url : <input value={url} onChange={ event => { setUrl(event.target.value)}} /><br/><br/>\n      <button type=\"submit\">create</button>\n    </form>   */\n    return (\n      <Togglable buttonLabel='new blog' buttonExit='cancel' ref={blogFormRef}>\n        <BlogForm createBlog={addBlog} />\n      </Togglable>\n    )\n  }\n\n  if(user === null){\n    return (\n      <div>\n        <h2>Log in to the application</h2>\n        <Notification  message={errorMessage} notifyColor={style} deletErrorMessage={deletErrorMessage}  />\n        {loginForm()}\n        <p>Do not have an account? Sign up </p>\n        {signUpForm()}\n      </div>\n    )\n  }\n  return (\n    <div>\n      <h2>Blogs lists : </h2>\n      {/* { console.log('loggedin user blogs list')}\n      {\n        console.log(userBlogs[0][0])\n      }\n      {console.log('each log ids ' )}\n      {blogs.map(blog => console.log(typeof blog.id))} */}\n\n\n\n      <Notification  message={errorMessage} deletErrorMessage={deletErrorMessage} notifyColor={style} />\n      <div style={{ color:'red', fontSize: 19 }}>{showError ? showError: ''}</div>\n      <p>{user.username} logged-in <button onClick={() => {\n        setUser(null)\n        //setBlogs([])\n        window.localStorage.removeItem('loggedBlogappUser')\n      }\n      }>Logout</button></p>\n\n      {blogForm()}\n      <br/>\n\n      {/*blogs sorted decending order by likes first and listed   */}\n      {\n        blogs.sort((a,b) => {\n          if(a.likes.length > b.likes.length) return -1\n          if(a.likes.length < b.likes.length) return 1\n          return 0\n        }).map(blog =>\n\n          <Blog\n            key={blog.id}\n            blog={blog}\n            handleLikes={() => handleLikes(blog.id)}\n            isItLiked={blog.likes.includes(user.username) ? 'unlike':'like'}\n            handleDeleteBlog={ () => handleDeleteBlog(blog.id)}\n            displayDeleteBtn={(userBlogs.length > 0 && userBlogs[0].includes(blog.id)) ? 'block' : 'none' }\n\n\n          />\n\n\n        )\n      }\n\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}